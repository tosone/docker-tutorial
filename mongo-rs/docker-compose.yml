version: "3.9"

services:
  mongo-replica-setup:
    container_name: mongo-setup
    image: mongo:5.0.6-focal
    restart: on-failure
    networks:
      - default
    volumes:
      - $PWD/mongosetup.sh:/scripts/mongosetup.sh
    entrypoint: ["bash", "/scripts/mongosetup.sh" ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${SECRETPERSONAL}
      HOST_DOMAIN: ${HOST_DOMAIN}
    depends_on:
      - mongo1
      - mongo2
      - mongo3

  mongo1:
    hostname: mongo1
    container_name: mongo1
    image: mongo:5.0.6-focal
    restart: always
    command: ["-f", "/etc/mongod.conf", "--port", "30001", "--keyFile", "/auth/file.key", "--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all"]
    expose:
      - 30001
    ports:
      - 30001:30001
    networks:
      - default
    volumes:
      - ${VOLUME_PREFIX}/mongo-rs/mongo1:/data/db
      - $PWD/initdb.d/:/docker-entrypoint-initdb.d/
      - $PWD/mongod.conf:/etc/mongod.conf
      - $PWD/file.key:/auth/file.key
    healthcheck:
      test: echo "rs.status().ok" | mongo admin -u root -p $${SECRETPERSONAL} --port 30001 --quiet | grep 1
      interval: 30s
      start_period: 60s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${SECRETPERSONAL}
      MONGO_INITDB_USERNAME: ${USERNAME}
      MONGO_INITDB_PASSWORD: ${SECRETPERSONAL}
      MONGO_INITDB_DATABASE: ${DATABASE_NAME}

  mongo2:
    hostname: mongo2
    container_name: mongo2
    image: mongo:5.0.6-focal
    command: ["-f", "/etc/mongod.conf","--port", "30002", "--keyFile", "/auth/file.key", "--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all"]
    restart: always
    expose:
      - 30002
    ports:
      - 30002:30002
    networks:
      - default
    volumes:
      - ${VOLUME_PREFIX}/mongo-rs/mongo2:/data/db
      - $PWD/mongod.conf:/etc/mongod.conf
      - $PWD/file.key:/auth/file.key
    healthcheck:
      test: echo "rs.status().ok" | mongo admin -u root -p $${SECRETPERSONAL} --port 30002 --quiet | grep 1
      interval: 30s
      start_period: 60s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${SECRETPERSONAL}
      MONGO_INITDB_USERNAME: ${USERNAME}
      MONGO_INITDB_PASSWORD: ${SECRETPERSONAL}
      MONGO_INITDB_DATABASE: ${DATABASE_NAME}
    depends_on:
      - mongo1

  mongo3:
    hostname: mongo3
    container_name: mongo3
    image: mongo:5.0.6-focal
    command: ["-f", "/etc/mongod.conf", "--port", "30003", "--keyFile", "/auth/file.key", "--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all"]
    restart: always
    expose:
      - 30003
    ports:
      - 30003:30003
    networks:
      - default
    volumes:
      - ${VOLUME_PREFIX}/mongo-rs/mongo3:/data/db
      - $PWD/mongod.conf:/etc/mongod.conf
      - $PWD/file.key:/auth/file.key
    healthcheck:
      test: echo "rs.status().ok" | mongo admin -u root -p $${SECRETPERSONAL} --port 30003 --quiet | grep 1
      interval: 30s
      start_period: 60s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${SECRETPERSONAL}
      MONGO_INITDB_USERNAME: ${USERNAME}
      MONGO_INITDB_PASSWORD: ${SECRETPERSONAL}
      MONGO_INITDB_DATABASE: ${DATABASE_NAME}
    depends_on:
      - mongo1

networks:
  default:
    name: ${DOCKER_NETWORK:-webproxy}
